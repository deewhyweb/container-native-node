apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: catalogedit
      namespace: samplenode
      creationTimestamp: null
      labels:
        project: catalogedit
        version: 1.0.0
        provider: nodeshift
        app: catalogedit
      annotations:
        nodeshift/git-branch: master
        nodeshift/git-commit: fe3fb6356c419522dd6478b14aacb93cec80f1de
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        app: catalogedit
        project: catalogedit
        provider: nodeshift
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - catalogedit
            from:
              kind: ImageStreamTag
              name: 'catalogedit:latest'
      template:
        metadata:
          annotations:
            sidecar.istio.io/status: >-
              {"version":"43466efda2266e066fb5ad36f2d1658de02fc9411f6db00ccff561300a2a3c78","initContainers":["istio-init","enable-core-dump"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-certs"]}
            nodeshift/git-branch: master
            nodeshift/git-commit: fe3fb6356c419522dd6478b14aacb93cec80f1de
          creationTimestamp: null
          labels:
            project: catalogedit
            version: 1.0.0
            provider: nodeshift
            app: catalogedit
            name: catalogedit
        spec:
          containers:
            - readinessProbe:
                httpGet:
                  path: /api/health/readiness
                  scheme: HTTP
                  port: 3000
                failureThreshold: 3
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              livenessProbe:
                httpGet:
                  path: /api/health/liveness
                  scheme: HTTP
                  port: 3000
                initialDelaySeconds: 60
                periodSeconds: 10
                failureThreshold: 3
                successThreshold: 1
                timeoutSeconds: 1
              image: 'docker-registry.default.svc:5000/samplenode/catalogedit:latest'
              name: catalogedit
              securityContext:
                privileged: false
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
              env:
                - name: MONGO_CONNECTION_STRING
                  valueFrom:
                    configMapKeyRef:
                      key: connection_string
                      name: mongo-configuration
                - name: MONGO_DBNAME
                  valueFrom:
                    configMapKeyRef:
                      key: db_name
                      name: mongo-configuration
              resources:
                limits:
                  cpu: 200m
                  memory: 400Mi
                requests:
                  cpu: 100m
                  memory: 200Mi
            - args:
                - proxy
                - sidecar
                - '--configPath'
                - /etc/istio/proxy
                - '--binaryPath'
                - /usr/local/bin/envoy
                - '--serviceCluster'
                - catalogedit
                - '--drainDuration'
                - 45s
                - '--parentShutdownDuration'
                - 1m0s
                - '--discoveryAddress'
                - 'istio-pilot.istio-system:8080'
                - '--discoveryRefreshDelay'
                - 1s
                - '--zipkinAddress'
                - 'zipkin.istio-system:9411'
                - '--connectTimeout'
                - 10s
                - '--statsdUdpAddress'
                - 'istio-mixer.istio-system:9125'
                - '--proxyAdminPort'
                - '15000'
                - '--controlPlaneAuthPolicy'
                - NONE
              env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: INSTANCE_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
              image: 'docker.io/istio/proxy:0.7.1'
              imagePullPolicy: IfNotPresent
              name: istio-proxy
              resources: {}
              securityContext:
                privileged: false
                readOnlyRootFilesystem: true
                runAsUser: 1337
              volumeMounts:
                - mountPath: /etc/istio/proxy
                  name: istio-envoy
                - mountPath: /etc/certs/
                  name: istio-certs
                  readOnly: true
          initContainers:
            - args:
                - '-p'
                - '15001'
                - '-u'
                - '1337'
              image: 'docker.io/istio/proxy_init:0.7.1'
              imagePullPolicy: IfNotPresent
              name: istio-init
              resources: {}
              securityContext:
                capabilities:
                  add:
                    - NET_ADMIN
            - args:
                - '-c'
                - >-
                  sysctl -w kernel.core_pattern=/etc/istio/proxy/core.%e.%p.%t
                  && ulimit -c unlimited
              command:
                - /bin/sh
              image: alpine
              imagePullPolicy: IfNotPresent
              name: enable-core-dump
              resources: {}
              securityContext:
                privileged: true
          volumes:
            - emptyDir:
                medium: Memory
              name: istio-envoy
            - name: istio-certs
              secret:
                optional: true
                secretName: istio.default
      strategy:
        type: Rolling
    status: {}
  - apiVersion: v1
    kind: Route
    spec:
      to:
        kind: Service
        name: catalogedit
      port:
        targetPort: 8080
    metadata:
      name: catalogedit
      namespace: samplenode
      labels:
        project: catalogedit
        version: 1.0.0
        provider: nodeshift
  - apiVersion: v1
    kind: Service
    spec:
      selector:
        project: catalogedit
        provider: nodeshift
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
          name: http
      type: ClusterIP
    metadata:
      name: catalogedit
      namespace: samplenode
      labels:
        project: catalogedit
        version: 1.0.0
        provider: nodeshift
      annotations:
        nodeshift/git-branch: master
        nodeshift/git-commit: fe3fb6356c419522dd6478b14aacb93cec80f1de
